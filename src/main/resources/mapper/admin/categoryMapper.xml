<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vogue.admin.category.mapper.CategoryMapper">

    <!-- 카테고리 등록 01 - 등록된 카테고리명이 있는지 확인-->
    <select id="duplicateName" parameterType="com.vogue.base.domain.CategoryVO" resultType="int">
        SELECT COUNT(*) FROM base_category where name = #{name}
    </select>

    <!-- 카테고리 등록 02 - 카테고리 저장 후 seq 반환-->
    <select id="insertCategory" parameterType="com.vogue.base.domain.CategoryVO" resultType="int">
        INSERT INTO base_category(
        upper_seq,
        name,
        url,
        sort,
        use_yn,
        depth
        ) VALUES (
        #{upperSeq},
        #{name},
        #{url},
        #{sort},
        #{useYn},
        #{depth}
        )
        RETURNING seq
    </select>

    <!-- 카테고리 등록 03 - 권한별 카테고리 등록 -->
    <insert id="insertCategoryPermissionGroup" parameterType="com.vogue.admin.category.domain.CategoryPermissionVO">
        INSERT INTO base_permission_group (
            idntf_cd,
            category_seq,
            access,
            add,
            update,
            delete
        ) VALUES (
            #{idntfCd},
            #{categorySeq},
            #{access},
            #{add},
            #{update},
            #{delete}
        )
    </insert>

    <!-- 관리자화면의 [카테고리관리] 메뉴   -->
    <select id="getCategoryAll" resultType="com.vogue.base.domain.CategoryVO">
        select  seq,
            name,
            depth,
            upper_seq upperSeq,
            sort,
            (select coalesce(json_agg(json_build_object('seq', mid.seq,
                        'name', mid.name,
                        'depth', mid.depth,
                        'upperSeq', mid.upper_seq,
                        'sort', mid.sort) order by mid.sort asc), '[]')
            from base_category mid
            where depth = 2) mid_category
        from base_category
        where depth = 1
        order by sort asc
    </select>

    <select id="getPermissionALl" resultType="hashmap">
        select
            idntf_cd,
            idntf_nm,
            'Y' as access,
            'Y' as add,
            'Y' as update,
            'Y' as delete
        from base_permission
        order by sort asc
    </select>

    <select id="getSelectOption" resultType="hashmap">
        select
            case when b.name is null then a.name
            else concat(b.name, ' > ', a.name)
            end label,
            a.seq value,
            a.depth
        from base_category a
        left join base_category b on a.upper_seq = b.seq
        where a.depth <![CDATA[<]]> 2
        order by a.sort asc
    </select>
</mapper>
