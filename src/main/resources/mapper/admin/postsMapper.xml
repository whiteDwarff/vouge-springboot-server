<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vogue.admin.posts.mapper.NoticeMapper">

    <insert id="insertNotice" parameterType="hashmap">
        insert into notice (
            upper_seq,
            lower_seq,
            title,
            notice,
            template,
            use_yn
        ) values (
            #{upperSeq},
            #{lowerSeq},
            #{title},
            #{notice},
            #{template},
            #{useYn}
        )
    </insert>

    <update id="updateNotice" parameterType="hashmap">
        update notice set
            upper_seq = #{upperSeq},
            lower_seq = #{lowerSeq},
            title = #{title},
            notice = #{notice},
            template = #{template},
            use_yn = #{useYn},
            updated_at = now()
        where seq = #{seq}
    </update>

    <select id="selectNoticeCount" parameterType="hashmap" resultType="int">
        select count(*) from (
            select
                n.seq,
                n.title as content,
                case when n.use_yn = 'Y' then '사용'
                else '미사용'
                end "useYn",
                to_char(n.created_at, 'yyyy-mm-dd') as "createdAt",
                n.notice,
                n.template,
                n.upper_seq,
                n.use_yn,
                bc.name as category
            from notice n
            join base_category bc on n.lower_seq = bc.seq
            where 1 = 1
            <if test="option == 'title' and value != ''">
                and n.title like concat('%', #{value}, '%')
            </if>
            <if test="option == 'upperSeq' and value != ''">
                and n.upper_seq = #{value}
            </if>
            <if test="option == 'useYn' and value != ''">
                and n.use_yn = #{value}
            </if>
        ) a
    </select>

    <select id="selectNoticeList" parameterType="hashmap" resultType="hashmap">
        select
            n.seq,
            n.title as content,
            case when n.use_yn = 'Y' then '사용'
                else '미사용'
            end "useYn",
            to_char(n.created_at, 'yyyy-mm-dd') as "createdAt",
            n.notice,
            n.template,
            n.upper_seq,
            n.use_yn,
            bc.name as category
        from notice n
        join base_category bc on n.lower_seq = bc.seq
        where 1 = 1
        <if test="option == 'title' and value != ''">
            and n.title like concat('%', #{value}, '%')
        </if>
        <if test="option == 'upperSeq' and value != ''">
            and n.upper_seq = #{value}
        </if>
        <if test="option == 'useYn' and value != ''">
            and n.use_yn = #{value}
        </if>
        order by n.created_at desc
        limit 5 offset #{offset}
    </select>

    <select id="selectOneNotice"  parameterType="Long" resultType="hashmap">
        select
            seq,
            template,
            notice,
            lower_seq "lowerSeq",
            upper_seq "upperSeq",
            use_yn "useYn",
            created_at "createdAt",
            title
        from notice where seq = #{seq}
    </select>

    <delete id="deleteNotice" parameterType="hashmap">
        delete from notice
        where seq = #{seq}
    </delete>


</mapper>
