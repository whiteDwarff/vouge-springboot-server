<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vogue.admin.posts.mapper.NoticeMapper">

    <insert id="insertNotice" parameterType="hashmap">
        /* 템플릿 등록, NoticeMapper_SQL.insertNotice */
        <selectKey keyProperty="seq" order="AFTER" resultType="int">
            SELECT CURRVAL('notice_seq') AS SEQ
        </selectKey>

        INSERT INTO NOTICE (
              UPPER_SEQ
            , LOWER_SEQ
            , TITLE
            , NOTICE
            , TEMPLATE
            , USE_YN
        ) VALUES (
            #{upperSeq},
            #{lowerSeq},
            #{title},
            #{notice},
            #{template},
            #{useYn}
        )
    </insert>

    <update id="updateNotice" parameterType="hashmap">
        /* 템플릿 수정, NoticeMapper_SQL.updateNotice */
        UPDATE NOTICE SET
              UPPER_SEQ   = #{upperSeq}
            , LOWER_SEQ   = #{lowerSeq}
            , TITLE       = #{title}
            , NOTICE      = #{notice}
            , TEMPLATE    = #{template}
            , USE_YN      = #{useYn}
            , UPDATED_AT  = NOW()
        WHERE SEQ         = #{seq}
    </update>

    <update id="updateNoticeUseYn" parameterType="hashmap">
        /* 템플릿 수정 시 UPPER_SEQ, LOWER_SEQ와 일치하는 모든 공지사항 USE_YN 변경,  NoticeMapper_SQL.updateNoticeUseYn*/
        UPDATE NOTICE SET
            USE_YN = 'N'
        WHERE UPPER_SEQ    = #{upperSeq}
            AND LOWER_SEQ  = #{lowerSeq}
    </update>

    <insert id="insertPrepend" parameterType="hashmap">
        /* 말머리 등록 */
        <foreach collection="prepend"  item="item" separator=";">
            INSERT INTO PREPEND (
                  UPPERSEQ
                , PREPEND
            ) VALUES (
                #{seq},
                #{item}
            )
        </foreach>
    </insert>

    <delete id="deletePrepend" parameterType="hashmap">
        /* 말머리 삭제, NoticeMapper_SQL.deletePrepend */
        DELETE FROM PREPEND WHERE UPPERSEQ = #{seq}
    </delete>

    <select id="selectOnePrepend" parameterType="hashmap" resultType="String">
        /*  게시글에 맞는 말머리 리스트 검색,  NoticeMapper_SQL.selectOnePrepend */
        SELECT PREPEND FROM PREPEND WHERE UPPERSEQ = #{seq}
    </select>

    <sql id="noticeList-where">
        <where>
            1 = 1
            <if test="option == 'title' and value != ''">
                AND N.TITLE LIKE CONCAT('%', ${value}, '%')
            </if>
            <if test="option == 'upperSeq' and value != ''">
                AND N.UPPER_SEQ = #{value}
            </if>
            <if test="option == 'useYn' and value != ''">
                AND N.USE_YN = #{value}
            </if>
        </where>
    </sql>

    <select id="selectNoticeCount" parameterType="hashmap" resultType="int">
        /*  템플릿 목록 개수 조회,  NoticeMapper_SQL.selectNoticeCount */
        SELECT COUNT(*) FROM (
            SELECT
                  N.SEQ
                , N.TITLE AS CONTENT
                , CASE WHEN N.USE_YN = 'Y' THEN '사용'
                    ELSE '미사용'
                  END                                 AS "useYn"
                , TO_CHAR(N.CREATED_AT, 'YYYY-MM-DD') AS "createdAt"
                , N.NOTICE
                , N.TEMPLATE
                , N.UPPER_SEQ
                , N.USE_YN
                , BC.NAME                             AS "category"
            FROM NOTICE N
            JOIN BASE_CATEGORY BC ON N.LOWER_SEQ = BC.SEQ
            <include refid="noticeList-where"></include>
        ) A
    </select>

    <select id="selectNoticeList" parameterType="hashmap" resultType="hashmap">
        /*  템플릿 목록 조회,  NoticeMapper_SQL.selectNoticeList */
        SELECT
              N.SEQ
            , N.TITLE AS CONTENT
            , CASE WHEN N.USE_YN = 'Y' THEN '사용'
                ELSE '미사용'
              END                                 AS "useYn"
            , TO_CHAR(N.CREATED_AT, 'YYYY-MM-DD') AS "createdAt"
            , N.NOTICE
            , N.TEMPLATE
            , N.UPPER_SEQ
            , N.USE_YN
            , BC.NAME                             AS "category"
        FROM NOTICE N
        JOIN BASE_CATEGORY BC ON N.LOWER_SEQ = BC.SEQ
        <include refid="noticeList-where"></include>
        ORDER BY N.CREATED_AT DESC
        LIMIT #{maxPages} OFFSET #{offset}
    </select>

    <select id="selectOneNotice" parameterType="hashmap" resultType="hashmap">
        /*  템플릿 데이터 상세 조회,  NoticeMapper_SQL.selectOneNotice */
        SELECT
              SEQ
            , TEMPLATE
            , NOTICE
            , LOWER_SEQ     AS "lowerSeq"
            , UPPER_SEQ     AS "upperSeq"
            , USE_YN        AS "useYn"
            , CREATED_AT    AS "createdAt"
            , TITLE
        FROM NOTICE
        WHERE SEQ           = #{seq}
    </select>

    <delete id="deleteNotice" parameterType="hashmap">
        /*  템플릿 삭제,  NoticeMapper_SQL.deleteNotice */
        DELETE FROM NOTICE WHERE SEQ = #{seq}
    </delete>

</mapper>
