<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vogue.posts.mapper.PostsMapper">

    <insert id="insertPosts" parameterType="hashmap">
        /* 게시글 등록, PostMapper_SQL.insertPosts*/
        <selectKey resultType="int" keyProperty="seq" order="BEFORE">
            SELECT COALESCE(MAX(SEQ), 0) + 1 seq FROM POSTS
        </selectKey>

        INSERT INTO posts(
              seq
            , upperSeq
            , lowerSeq
            , prepend
            , title
            , content
            , author
            , publicYn
            , commentYn
        ) VALUES(
              #{seq}
            , #{upperSeq}
            , #{lowerSeq}
            , #{prepend}
            , #{title}
            , #{content}
            , #{author}
            , #{publicYn}
            , #{commentYn}
        )
    </insert>

    <select id="selectByPaging" parameterType="hashmap" resultType="hashmap">
        /* 게시글 목록 조회, PostMapper_SQL.selectByPaging */
        SELECT * FROM (
            SELECT
                  P.SEQ
                , P.TITLE
                , TO_CHAR(P.CREATEDAT, 'YYYY-MM-DD') 		  AS "createdAt"
                , P.READCOUNT                                 AS "readCount"
                , P.LIKECOUNT                                 AS "likeCount"
                , TU.NAME
                , P.LOWERSEQ
                , P.CREATEDAT
                , ROW_NUMBER() OVER(ORDER BY CREATEDAT ASC) AS "rowNum"
            FROM POSTS P
            JOIN TB_USER TU
                ON P.AUTHOR = TU.SEQ
        ) A
        <include refid="selectByPagingWhere"></include>
        ORDER BY CREATEDAT DESC
        LIMIT #{maxPages} OFFSET #{offset}
    </select>

    <sql id="selectByPagingWhere">
        <where>
                AND LOWERSEQ =  CAST (#{category} AS INTEGER)
            <!-- 작성자, 제목으로 검색-->
            <if test="label == 'name' and value != '' or label == 'title' and value != ''">
                AND ${label} LIKE '%' || #{value} || '%'
            </if>
            <if test="label == 'readDesc'"></if>
        </where>
    </sql>

    <select id="selectByPagingCount" parameterType="hashmap" resultType="int">
        /* 게시글 목록 개수 조회, PostMapper_SQL.selectByPagingCount */
        SELECT COUNT(*) FROM (
            SELECT
                  P.SEQ
                , P.TITLE
                , TO_CHAR(P.CREATEDAT, 'YYYY-MM-DD') 		  AS "createdAt"
                , P.READCOUNT                                 AS "readCount"
                , P.LIKECOUNT                                 AS "likeCount"
                , TU.NAME
                , P.LOWERSEQ
                , P.CREATEDAT
                , ROW_NUMBER() OVER(ORDER BY CREATEDAT ASC) AS "rowNum"
            FROM POSTS P
        JOIN TB_USER TU
            ON P.AUTHOR = TU.SEQ
        ) A
        <include refid="selectByPagingWhere"></include>
    </select>

    <select id="selectOne" parameterType="hashmap" resultType="hashmap">
        /* 게시글 상세 검색 , PostMapper_SQL.selectOne */
        SELECT
                P.SEQ 							   AS  "postSeq"
              , BC.SEQ							   AS  "categorySeq"
              , TU.SEQ 							   AS  "authorSeq"
              , CASE WHEN P.PREPEND != '' THEN  '[ ' || P.PREPEND || ' ]  ' || P.TITLE
                    ELSE P.TITLE
                END 							   AS  "title"
             , P.CONTENT
             , TU.NICKNAME
             , BC.NAME 			  	        	   AS  "categoryNm"
             , BP.IDNTF_NM                         AS  "idntfNm"
             , TU.PHOTO_URL
             , P.READCOUNT                         AS  "readCount"
             , P.LIKECOUNT                         AS  "likeCount"
             , TO_CHAR(P.CREATEDAT, 'YYYY-MM-DD')  AS  "createdAt"
        FROM POSTS P
        JOIN TB_USER TU
            ON P.AUTHOR  = TU.SEQ
        JOIN BASE_PERMISSION BP
            ON TU.IDNTF_CD = BP.IDNTF_CD
        JOIN BASE_CATEGORY BC
            ON P.LOWERSEQ = BC.SEQ
            WHERE CAST(P.SEQ AS VARCHAR)           = #{posts}
            AND CAST(P.LOWERSEQ AS VARCHAR)        = #{category}
    </select>

    <select id="selectEditInfo" parameterType="hashmap" resultType="hashmap">
        /* 게시글 수정 > 게시글 상세 검색 , PostMapper_SQL.selectEditInfo */
        SELECT
            SEQ
            , UPPERSEQ 	                 AS "upperSeq"
            , LOWERSEQ                   AS "lowerSeq"
            , PREPEND
            , TITLE
            , CONTENT
            , CAST(PUBLICYN AS BOOLEAN)  AS "publicYn"
            , CAST(COMMENTYN AS BOOLEAN) AS "commentYn"
            FROM POSTS
       <!-- WHERE SEQ = #{seq}-->
        WHERE SEQ = CAST (#{seq} AS INTEGER)
    </select>

    <delete id="delete">
        /* 게시글 삭제 , PostMapper_SQL.delete */
        DELETE FROM POSTS
        WHERE SEQ = #{postSeq};
        <!--  댓글, 좋아요 삭제 구현 -->
    </delete>

    <update id="update" parameterType="hashmap">
        /* 게시글 수정, PostMapper_SQL.update */
        UPDATE POSTS SET
              UPPERSEQ  = #{upperSeq}
            , LOWERSEQ  = #{lowerSeq}
            , PREPEND   = #{prepend}
            , TITLE     = #{title}
            , CONTENT   = #{content}
            , PUBLICYN  = #{publicYn}
            , COMMENTYN = #{commentYn}
            , UPDATEDAT = CURRENT_TIMESTAMP
        WHERE SEQ       = CAST (#{seq} AS INTEGER)
    </update>

</mapper>
