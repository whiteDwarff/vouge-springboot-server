<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vogue.base.mapper.BaseMapper">
    <!-- 사용자의 권한에 맞는 카테고리 반환  -->
    <select id="getAsideMenu" parameterType="String" resultType="com.vogue.base.domain.CategoryVO">
        select  high.seq,
                high.name,
                high.depth,
                high.upper_seq,
                high.sort,
                high.post_yn,
                (select coalesce(json_agg(json_build_object('seq', mid.seq,
                                    'name', mid.name,
                                    'depth', mid.depth,
                                    'upperSeq', mid.upper_seq,
                                    'sort', mid.sort,
                                    'idntfCd', gup.idntf_cd,
                                    'url', mid.url,
                                    'postYn', mid.post_yn,
                                    'categorySeq', gup.category_seq,
                                    'access', gup.access,
                                    'add', gup.add,
                                    'update', gup.update,
                                    'delete', gup.delete
                                    ) order by mid.sort asc), '[]')
                from base_category mid
                join base_permission_group gup
                on mid.seq = gup.category_seq
                    and gup.access = 'Y'
                    and gup.idntf_cd = #{idntfCd}
                where depth = 2) mid_category
        from base_category high
        join base_permission_group gup on high.seq = gup.category_seq
        and gup.idntf_cd = #{idntfCd}
        and gup.access = 'Y'
        where high.depth = 1 and high.use_yn = 'Y'
        order by sort asc
    </select>

    <select id="getTreeMenu" resultType="hashmap">
        select
        case when b.name is null then a.name
        else concat(b.name, ' > ', a.name)
        end label,
        a.seq value,
        a.depth
        from base_category a
        left join base_category b on a.upper_seq = b.seq
        where a.depth <![CDATA[<]]> 2
        order by a.sort asc
    </select>

    <select id="getAuthPermission" resultType="com.vogue.base.domain.AuthPermissionVO">
        select * from base_permission
    </select>
</mapper>
